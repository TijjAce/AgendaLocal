# Generated by Django 5.2.4 on 2025-07-24 11:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fiches', '0016_fiche_duration_minutes'),
        ('sequences', '0002_sequence_total_duration_minutes'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bitmoji_url', models.URLField(blank=True, help_text="URL du Bitmoji de l'utilisateur", max_length=500, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude de la position sur la carte de France (41.0 à 51.5)', null=True, validators=[django.core.validators.MinValueValidator(41.0), django.core.validators.MaxValueValidator(51.5)])),
                ('longitude', models.FloatField(blank=True, help_text='Longitude de la position sur la carte de France (-5.5 à 10.0)', null=True, validators=[django.core.validators.MinValueValidator(-5.5), django.core.validators.MaxValueValidator(10.0)])),
                ('ville', models.CharField(blank=True, help_text="Ville de l'utilisateur", max_length=100, null=True)),
                ('departement', models.CharField(blank=True, help_text='Code département (ex: 75, 69, 13)', max_length=3, null=True)),
                ('bio', models.TextField(blank=True, help_text="Biographie courte de l'utilisateur", max_length=500, null=True)),
                ('is_public', models.BooleanField(default=True, help_text='Profil visible sur la carte publique')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('accepted', 'Acceptée'), ('declined', 'Refusée'), ('blocked', 'Bloquée')], default='pending', max_length=10, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('addressee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_friend_requests', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_friend_requests', to=settings.AUTH_USER_MODEL, verbose_name='Demandeur')),
            ],
            options={
                'verbose_name': 'Amitié',
                'verbose_name_plural': 'Amitiés',
                'unique_together': {('requester', 'addressee')},
            },
        ),
        migrations.CreateModel(
            name='SharedFiche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, help_text="Message d'accompagnement", max_length=500, null=True)),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('can_edit', models.BooleanField(default=False, help_text="L'ami peut-il modifier cette fiche ?")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fiche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiches.fiche', verbose_name='Fiche')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_fiches', to=settings.AUTH_USER_MODEL, verbose_name='Partagé par')),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_fiches', to=settings.AUTH_USER_MODEL, verbose_name='Partagé avec')),
            ],
            options={
                'verbose_name': 'Fiche partagée',
                'verbose_name_plural': 'Fiches partagées',
                'ordering': ['-created_at'],
                'unique_together': {('fiche', 'shared_by', 'shared_with')},
            },
        ),
        migrations.CreateModel(
            name='SharedSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, help_text="Message d'accompagnement", max_length=500, null=True)),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('can_edit', models.BooleanField(default=False, help_text="L'ami peut-il modifier cette séquence ?")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sequences.sequence', verbose_name='Séquence')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_sequences', to=settings.AUTH_USER_MODEL, verbose_name='Partagé par')),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_sequences', to=settings.AUTH_USER_MODEL, verbose_name='Partagé avec')),
            ],
            options={
                'verbose_name': 'Séquence partagée',
                'verbose_name_plural': 'Séquences partagées',
                'ordering': ['-created_at'],
                'unique_together': {('sequence', 'shared_by', 'shared_with')},
            },
        ),
    ]
